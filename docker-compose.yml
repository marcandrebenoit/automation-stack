version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  redis:
    image: redis:6
    container_name: n8n-redis
    restart: unless-stopped
    networks:
      - internal

  n8n:
    image: n8nio/n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - "${N8N_PORT}:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${POSTGRES_HOST}
      - DB_POSTGRESDB_PORT=${POSTGRES_PORT}
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - QUEUE_MODE=${QUEUE_MODE}
      - REDIS_HOST=${REDIS_HOST}
      - N8N_BASIC_AUTH_ACTIVE=${N8N_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_AUTH_PASS}
      - N8N_EDITOR_BASE_URL=${N8N_BASE_URL}
      - WEBHOOK_URL=${N8N_WEBHOOK_URL}
    depends_on:
      - postgres
      - redis
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - internal

  whatsapp-bridge:
    build:
      context: ./whatsapp-mcp
      dockerfile: whatsapp-bridge/Dockerfile
    container_name: whatsapp-bridge
    volumes:
      - whatsapp_store:/app/whatsapp-bridge/store
    restart: unless-stopped
    networks:
      - internal

  whatsapp-mcp-server:
    build:
      context: ./whatsapp-mcp
      dockerfile: whatsapp-mcp-server/Dockerfile
    container_name: whatsapp-mcp-server
    volumes:
      - whatsapp_store:/app/whatsapp-bridge/store
    ports:
      - "${MCP_PORT}:8000"
    restart: unless-stopped
    depends_on:
      - whatsapp-bridge
    networks:
      - internal

volumes:
  n8n_data:
  postgres_data:
  whatsapp_store:

networks:
  internal:
    driver: bridge
